version: "3.8"

services:
  mysqldb-auth:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQLDB_DATABASE=$MYSQLDB_AUTH_DATABASE
      - TZ=Australia/Sydney
    volumes:
      - db-auth:/var/lib/mysql
  mysqldb-restaurant:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQLDB_DATABASE=$MYSQLDB_RESTAURANT_DATABASE
      - TZ=Australia/Sydney
    volumes:
      - db-restaurant:/var/lib/mysql
  mysqldb-order:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQLDB_DATABASE=$MYSQLDB_ORDER_DATABASE
      - TZ=Australia/Sydney
    volumes:
      - db-order:/var/lib/mysql
  auth:
    depends_on:
      - mysqldb-auth
      - order
      - restaurant
    build: 
      context: ./micro-authentication
      target: development
    env_file: ./.env
    ports:
      - 8000:8000
    volumes:
      - .m2:/root/.m2
      - ./logs:/root/logs
  gateway:
    depends_on:
      - auth
      - restaurant
      - order
    build:
      context: ./micro-gateway
      target: development
    env_file: ./.env
    ports:
      - 8080:8080
      - 7070:7070
    volumes:
      - .m2:/root/.m2
      - ./logs:/root/logs
  restaurant:
    depends_on:
      mysqldb-restaurant:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    build: 
      context: ./micro-restaurant
      target: development
    env_file: ./.env
    ports:
      - 8082:8082
    volumes:
      - .m2:/root/.m2
      - ./logs:/root/logs
  order:
    depends_on:
      mysqldb-order:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    build: 
      context: ./micro-order
      target: development
    env_file: ./.env
    ports:
      - 8182:8182
    volumes:
      - .m2:/root/.m2
      - ./logs:/root/logs
  rabbitmq:
      image: rabbitmq:3.11-management
      container_name: rabbitmq
      restart: always
      ports:
          - 15672:15672
      volumes:
          - ./dados:/var/lib/rabbitmq/mnesia
      environment:
          - RABBITMQ_DEFAULT_USER=$RABBITMQ_USER
          - RABBITMQ_DEFAULT_PASS=$RABBITMQ_PASSOWRD
          - TZ=Australia/Sydney
      healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 30s
        timeout: 30s
        retries: 3

volumes:
  db-auth:
  db-restaurant:
  db-order:
